group 'org.platypus.sample'
version '1.0-SNAPSHOT'

//apply plugin: GradlePlatypusPluginBuilder
apply plugin: 'java'
repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    models {
        java {
            srcDir 'src/models/java'
        }
    }
    apt_resources {
        compileClasspath += sourceSets.models.runtimeClasspath
        resources {
            srcDir 'src/generated/resources'
        }
    }
    main {
        compileClasspath += sourceSets.models.output
        runtimeClasspath += sourceSets.models.output
        java {
            exclude "${project.group.toString().replace(".", "/")}/${project.name}/generated/**"
        }
    }
    generated {
        compileClasspath += sourceSets.main.runtimeClasspath
        java {
            srcDir 'src/generated/java'
        }
        resources {
            srcDir 'src/generated/resources'
        }
    }

}
buildscript {
    repositories {
        maven {
            url uri('../../repo')
        }
    }
    dependencies {
        classpath 'org.platypus:MyPlugin:1.0-SNAPSHOT'
        compile 'com.squareup:javapoet:1.8.0'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
    compile project(':impl:module')
    compile project(':impl:models')
    compile project(':builder:core')
    compile project(':builder:plugin:jpa-generator')
    compile project(':builder:plugin:display-tree-module')
    compile project(':module:base')
    modelsCompile project(':api:annotations')
    modelsCompile project(':api:models')
//

}
apply plugin: 'org.platypus.greeting'
task greeting(type: org.platypus.GreetingTask) {
    greeting = 'howdy!'
    doLast {
        println project.configurations.compile.dependencies.find()
    }
}





platypus {
    moduleVersion "1"
    depends = ['base', 'stock']
    conf {
        display_tree_module {
            enable = false
            opt = [output: "TXT"]
        }
    }
}

clean.doFirst {
    delete "${project.projectDir}/src/main/java/${project.group.toString().replace(".", "/")}/${project.name}/generated"
    println "${project.projectDir}/src/main/java/${project.group.toString().replace(".", "/")}/${project.name}/generated"
}



