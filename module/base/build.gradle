group 'org.platypus.erp.module'
version '1.0-SNAPSHOT'

apply plugin: 'org.platypus.greeting'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
sourceSets {
    models {
        java {
            srcDir 'src/models/java'
        }
    }
    records {
        java {
            srcDir 'src/record/java'
        }
    }
    main {
        compileClasspath += sourceSets.models.output
        runtimeClasspath += sourceSets.models.output
    }
    generated {
        compileClasspath += sourceSets.main.runtimeClasspath
        java {
            srcDir 'src/generated/java'
        }
        resources {
            srcDir 'src/generated/resources'
        }
    }
}
buildscript {
    repositories {
        maven {
            url uri('../../repo')
        }
    }
    dependencies {
        classpath 'org.platypus:MyPlugin:1.0-SNAPSHOT'
    }
}
dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile 'org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final'
    compile project(':impl:module')
    compile project(':impl:models')
    compile project(':builder:core')
    compile project(':builder:plugin:jpa-generator')
    compile project(':builder:plugin:display-tree-module')
    modelsCompile project(':api:annotations')
    modelsCompile project(':api:models')
    recordsCompile project(':builder:core')
}
jar {
    from sourceSets.models.output
    from sourceSets.main.output
    from sourceSets.records.output
    dependsOn modelsClasses
    dependsOn recordsClasses
    dependsOn generatedClasses
}

compileJava{
    source    += sourceSets.generated.java
    source    += sourceSets.main.java
    source    += sourceSets.records.java
}

platypus {
    moduleVersion "1"
    depends = []
}
task generate_records(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.platypus.builder.QuickRecordBuilder'
    // arguments to pass to the application
    args = ["${sourceSets.main.java.srcDirs}", "${project.group}", "${project.name}", "${project.projectDir}"]
}
task platypus_views(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.platypus.builder.core.views.ViewsFinder'
    // arguments to pass to the application
    args = ["${sourceSets.main.resources.srcDirs}", "${project.group}", "${project.name}", "${project.projectDir}"]
}
clean {
    delete sourceSets.generated.java.srcDirs
}

